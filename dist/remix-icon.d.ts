declare const RemixFolderShared: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilePaper2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderHistory: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileInfo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTask: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderUser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBook3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBook2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookMark: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolders: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileHwp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileEdit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileSearch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileExcel2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileMusic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileCopy2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMarkdown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileHistory: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBill: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolder5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolder4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderOpen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilePpt2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileWord: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileMark: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilePdf: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderChart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilePpt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBook: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileExcel: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderKeyhole: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolder: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileShred: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContactsBookUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNewspaper: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileCode: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolder2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolder3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilePaper: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileCloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderWarning: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookRead: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStickyNote2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPages: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileWarning: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileChart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContactsBook: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDraft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArticle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderMusic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileForbid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBooklet: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileShield: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderShield: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderForbid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderZip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderShield2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderReceived: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileCopy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileZip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderTransfer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSurvey: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileList: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFile2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFile3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTodo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumbers: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileTransfer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContactsBook2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderInfo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClipboard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileDamage: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileText: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookOpen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFile4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileUser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileGif: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStickyNote: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileReduce: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileWord2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderUnknow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKeynote: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileList2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileList3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileUnknow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderReduce: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFolderChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFileShield2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUnderline: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteRow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSubscript: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSingleQuotesR: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTranslate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOmega: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeading: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStrikethrough: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWubiInput: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBringToFront: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignBottom: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMindMap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignJustify: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPageSeparator: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAB: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlowChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFontSize: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTranslate2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLink: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpace: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSortDesc: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignVertically: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoubleQuotesR: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInsertColumnLeft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinkM: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInsertColumnRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber8: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRoundedCorner: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinkUnlinkM: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOrganizationChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixParagraph: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStrikethrough2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMergeCellsVertical: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber9: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixListOrdered: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBold: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFunctions: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTextDirectionR: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLineHeight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInputCursorMove: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCodeView: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber7: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixText: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMergeCellsHorizontal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSuperscript: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInsertRowBottom: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoubleQuotesL: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFontColor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH1: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSeparator: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber1: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSplitCellsVertical: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSplitCellsHorizontal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPinyinInput: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSubscript2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHashtag: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber0: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteColumn: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixH6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBringForward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInsertRowTop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTextDirectionL: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTable2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNumber3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSendToBack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSortAsc: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFormatClear: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQuestionMark: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixIndentIncrease: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEnglishInput: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSingleQuotesL: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixItalic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignCenter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTextWrap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmphasis: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixListUnordered: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSuperscript2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixListCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmphasisCn: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNodeTree: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixIndentDecrease: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAsterisk: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixListCheck2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTextSpacing: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAttachment2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSendBackward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignTop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinkUnlink: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFontSize2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlignLeft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailSend: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarChartHorizontal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWindow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloudOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixProfile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAdvertisement: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailForbid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixProjector2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommons: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommonsSa: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarChartBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPrinterCloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBubbleChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalendarCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInboxArchive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixReply: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommonsNd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBriefcase2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBriefcase3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArchiveDrawer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPieChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinks: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPrinter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGlobal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInbox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixReplyAll: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailStar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommonsNc: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlideshow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCopyleft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBriefcase5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBriefcase4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMedal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookmark: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWindow2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailVolume: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailUnread: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrademark: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCustomerService: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSendPlane2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSendPlane: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlag: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalendarTodo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlideshow4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlag2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalculator: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixProjector: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalendar2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalendarEvent: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPieChart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailOpen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAttachment: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCalendar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPieChartBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMail: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRecordMail: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDonutChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBriefcase: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArchive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixService: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRegistered: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarChartGrouped: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHonour: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailClose: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMailDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarChart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookmark3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBookmark2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommonsZero: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCopyright: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMedal2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLineChart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCreativeCommonsBy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInboxUnarchive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlideshow2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlideshow3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCustomerService2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSensor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMacbook: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSave3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSave2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInstall: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifi2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifi3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRotateLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRouter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRestart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDatabase2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScan: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQrScan: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHardDrive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBatteryShare: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBattery2Charge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBluetoothConnect: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQrCode: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShutDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSimCard2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixServer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMac: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeviceRecover: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBatteryCharge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGradienter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSdCard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBattery: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSmartphone: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTablet: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTv2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDevice: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRemoteControl2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDualSim1: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFingerprint: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRss: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarcodeBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCellphone: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQrScan2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBluetooth: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGps: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKeyboardBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPhoneLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScan2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCpu: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCast: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGamepad: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMouse: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBatteryLow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBatterySaver: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRemoteControl: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUDisk: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTv: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAirplay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUninstall: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifi1: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRadar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSave: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifiError: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHardDrive2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKeyboard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWifiOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDashboard2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDashboard3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDualSim2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDatabase: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBattery2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifiOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPhoneFind: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWirelessCharging: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHotspot: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixComputer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSdCardMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUsb: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarcode: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFingerprint2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBaseStation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSimCard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPhone: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGoogle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWindows: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGatsby: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTelegram: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUbuntu: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVimeo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFacebookCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixIe: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBehance: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitlab: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWechat: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOpera: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRemixicon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSteam: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStackOverflow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWechatPay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOpenSource: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSnapchat: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMiniProgram: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWechat2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixXbox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlaystation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixProductHunt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPinterest: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInvision: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDouban: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQq: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixReddit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlipay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEdge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDrive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinkedin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTaobao: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVuejs: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNpmjs: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkype: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTumblr: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUnsplash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGooglePlay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPaypal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDingding: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFacebookBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSwitch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixReactjs: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInstagram: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTwitch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDropbox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMessenger: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBilibili: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAndroid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixYoutube: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFirefox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKakaoTalk: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDisqus: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPixelfed: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCentos: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixApple: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrello: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixZhihu: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAngularjs: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHonorOfKings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStackshare: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixXing: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFacebook: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDiscord: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNeteaseCloudMusic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChrome: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCodepen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlutter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPatreon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMicrosoft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSoundcloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixZcool: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLinkedinBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAppStore: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFinder: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWhatsapp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNetflix: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSafari: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTwitter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGithub: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMastodon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMastercard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMedium: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDribbble: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBaidu: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoreos: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEvernote: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVisa: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAmazon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpectrum: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLine: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpotify: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWeibo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserVoice: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTravesti: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOpenArm: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotionUnhappy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAliens: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserUnfollow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkull2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserHeart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAccountPinCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserStar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRobot: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotion2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAdmin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBearSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAccountCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserShared2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserLocation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserReceived: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWomen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotionLaugh: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGhost: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBodyScan: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserFollow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTeam: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixParent: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGhostSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCriminal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGroup2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotionSad: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStarSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGroup: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAccountPinBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAccountBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserShared: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUser6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserSearch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotion: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotionNormal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserReceived2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUserAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGenderless: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContacts: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmotionHappy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGhost2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkull: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMickey: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenu: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShareBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldStar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowGoBack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRadioButton: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeftRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldKeyhole: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowRightS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEyeOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDropRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeftUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFunction: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixThumbUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloseCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSearch2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEye: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowGoForward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxBlankCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStarHalfS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckDouble: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpam3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpam2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShareForward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenuAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenu5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenu4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLockPassword: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMore: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDownload2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldCross: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlarm: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDownCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEyeClose: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoginBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSearch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUploadCloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxMultipleBlank: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDownloadCloud2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAddBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLogoutBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLock2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUpload2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenu2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenu3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowRightDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDivide: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilterOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShareCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStarS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSearchEye: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDownS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDashboard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTimer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixToggle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRefresh: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUploadCloud2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDropLeft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShare: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLogoutCircleR: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldFlash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixErrorWarning: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxBlank: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoginCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixZoomIn: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeftCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDownloadCloud: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowUpS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAddCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin7: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShareForward2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilter: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowUpDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlarmWarning: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldUser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowRightUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoader4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoader5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInformation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSideBar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBack2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLogoutCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFindReplace: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxMultiple: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowUpCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenuFold: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpam: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixApps: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoader: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMore2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMenuUnfold: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLogoutBoxR: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixZoomOut: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTime: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLockUnlock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeftS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClose: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQuestion: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotificationBadge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeftDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDeleteBin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShieldCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEye2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExternalLink: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTimer2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixThumbDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDropUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHistory: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixApps2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSettings3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTimerFlash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixListSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowLeft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSubtract: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckbox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowRightCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArrowDropDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCheckboxIndeterminate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixForbid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoader3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixForbid2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLoader2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixIndeterminateCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShield: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilter2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilter3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShareForwardBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlert: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStarHalf: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChat1: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatQuote: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatSmile3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatSmile2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatFollowUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatVoice: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatPoll: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatHistory: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatDelete: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatHeart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQuestionnaire: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFeedback: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMessage3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMessage2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatForward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVideoChat: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatCheck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMessage: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatSettings: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChat2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChat3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQuestionAnswer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChat4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatNew: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDiscuss: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatPrivate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChatSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLightbulbFlash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoorLockBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWheelchair: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKnifeBlood: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCake2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCake3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSeedling: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixUmbrella: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCactus: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKnife: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOutlet: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKey2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVoiceRecognition: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCake: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLeaf: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlant: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlug2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLightbulb: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScales3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScales2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSword: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFridge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRecycle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBoxing: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPingPong: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBell: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTShirt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScales: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBilliards: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShirt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTShirtAir: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCharacterRecognition: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoorOpen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixReserved: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGame: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixKey: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlug: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOutlet2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoorClosed: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBasketball: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDoorLock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFootball: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHandbag: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTShirt2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCursor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCode: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBraces: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitBranch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTerminalBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitCommit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitRepositoryCommits: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCss3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCodeBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTerminalWindow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBug: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHtml5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitPullRequest: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCodeSSlash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTerminal: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixParentheses: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBug2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCommand: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitMerge: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitRepository: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGitRepositoryPrivate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBrackets: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCodeS: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixImage2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlayCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFullscreenExit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCameraSwitch: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPauseMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRhythm: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTape: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRadio2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDvd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlayListAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPauseCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlayMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWebcam: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPictureInPicture2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFullscreen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkipForward: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkipBack: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDv: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMusic2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpeaker3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpeaker2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStopMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVolumeOffVibrate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClosedCaptioning: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHq: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShuffle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotificationOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSurroundSound: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRepeat2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStopCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEqualizer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRecordCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGalleryUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVoiceprint: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPictureInPicture: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpeaker: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixImageEdit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotification4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkipBackMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const Remix4k: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAspectRatio: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMusic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPhoneCamera: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVideoDownload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRepeatOne: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPause: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVideo: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSoundModule: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBroadcast: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVideoAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVolumeDown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRewindMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpeed: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOrderPlay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpeedMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClapperboard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeadphone: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlay: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFilm: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotification: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAlbum: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSkipForwardMini: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRadio: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVideoUpload: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVolumeUp: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVidicon2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixImage: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVolumeMute: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDisc: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLandscape: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMic2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMicOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPictureInPictureExit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRepeat: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVolumeVibrate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCamera: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEject: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixImageAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGallery: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPolaroid2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMovie: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotification2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNotification3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMovie2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMv: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRewind: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlayList2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLive: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPolaroid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCameraOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlayList: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCamera3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCamera2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCameraLens: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVidicon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeartAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMentalHealth: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlask: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNurse: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEmpathize: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCapsule: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPulse: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSyringe: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHearts: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFirstAidKit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDislike: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixThermometer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixZzz: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMedicineBottle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLungs: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStethoscope: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRestTime: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSurgicalMask: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeart3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVirus: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInfraredThermometer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPsychotherapy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDossier: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeartPulse: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMicroscope: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHandSanitizer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHealthBook: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTestTube: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTempHot: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloudy2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloudy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHaze: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWindy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoonClear: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFire: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixThunderstorms: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoonCloudy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSunFoggy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShowers: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTyphoon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCelsius: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHaze2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMist: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlashlight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRainy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRainbow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSun: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTornado: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSunCloudy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFahrenheit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHail: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlood: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTempCold: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHeavyShowers: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMeteor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCloudWindy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBlaze: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEarthquake: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSnowy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDrizzle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFoggy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoonFoggy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPin2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPin3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPushpin2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGasStation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRestaurant2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGuide: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWalk: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGoblet: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrainWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRiding: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSteering: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTakeaway: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPassport: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChinaRailway: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPinDistance: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixOil: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompass4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCarWashing: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPoliceCar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlightLand: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTruck: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLifebuoy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFlightTakeoff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPinRange: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHotelBed: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompass3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompass2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDirection: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRestaurant: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChargingPile2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPin5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPin4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompass: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixNavigation: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSubwayWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMap2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTaxiWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShip2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSuitcase: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSteering2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCaravan: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEarth: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPushpin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPlane: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPinAdd: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrain: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPinUser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTaxi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixParking: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLuggageDeposit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGlobe: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBus: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixParkingBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompassDiscover: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCup: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSailboat: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRocket: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEBike: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTreasureMap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixChargingPile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBarricade: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMotorbike: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRun: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAnchor: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBusWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRoadster: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBus2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMapPinTime: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSignalTower: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSuitcase3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSuitcase2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRoute: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRocket2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEBike2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSpaceShip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrafficLight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFootprint: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBike: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSubway: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLuggageCart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRoadMap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyEuroCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoins: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPriceTag: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyCnyCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingCart2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoupon5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoupon4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSafe: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGift: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyDollarBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBankCard2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingBag: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVipCrown2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExchange: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTicket: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyPoundCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExchangeFunds: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyCnyBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRefund: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSwap: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCurrency: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExchangeBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSwapBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSafe2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoupon: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRefund2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGift2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoupon2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCoupon3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyPoundBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBankCard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCopperCoin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingBasket2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHandCoin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyDollarCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExchangeDollar: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStock: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingBag3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingBag2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTicket2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTrophy: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWallet3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWallet2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVipDiamond: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixExchangeCny: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMoneyEuroBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWallet: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAuction: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixWaterFlash: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCopperDiamond: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPercent: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFunds: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingCart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRedPacket: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPriceTag2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPriceTag3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHandHeart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixVipCrown: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSecurePayment: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShoppingBasket: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const Remix24Hours: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBitCoin: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixIncreaseDecrease: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFundsBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutRight2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDragDrop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutBottom: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDrop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAnticlockwise2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPaintBrush: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMarkPen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEditCircle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInkBottle: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClockwise: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPantone: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixClockwise2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutTop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMagic: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPenNib: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAnticlockwise: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompasses2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContrastDrop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCompasses: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCrop2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTableAlt: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutBottom2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutTop2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFocus: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContrast2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPencilRuler: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutLeft: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutGrid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEdit: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScissors: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSlice: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGrid: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEditBox: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContrast: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPalette: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEraser: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDragMove: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRuler2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBallPen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutColumn: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixEdit2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFocus2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixFocus3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShape2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutRow: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixRuler: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBrush3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBrush2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScreenshot2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHammer: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBlurOff: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutRight: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPencilRuler2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScissors2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBrush: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutLeft2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayout: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScreenshot: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTable: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixMarkup: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBrush4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPaint: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixLayoutMasonry: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixScissorsCut: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixPencil: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixTools: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArtboard: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixQuillPen: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixContrastDrop2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCollage: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixSip: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixInputMethod: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixArtboard2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixShape: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixDragMove2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCrop: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHospital: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHomeHeart: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixCommunity: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome5: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome8: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixGovernment: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHomeSmile2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome7: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHome6: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHomeSmile: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBuilding4: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBuilding: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHomeWifi: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStore3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStore2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHotel: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixHomeGear: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAncientPavilion: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixAncientGate: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBuilding3: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBuilding2: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixBank: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
declare const RemixStore: import("vue").DefineComponent<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => null;
    };
    spin: {
        type: BooleanConstructor;
    };
    fill: {
        type: BooleanConstructor;
    };
    color: {
        type: StringConstructor;
    };
}>>, {
    size: string | number;
    spin: boolean;
    fill: boolean;
}, {}>;
export { RemixFolderShared, RemixFilePaper2, RemixFolderHistory, RemixFolderDownload, RemixFileUpload, RemixFileInfo, RemixFile, RemixTask, RemixFolderUser, RemixFolderUpload, RemixBook3, RemixBook2, RemixBookMark, RemixFolders, RemixFileHwp, RemixFileEdit, RemixFileSearch, RemixFileExcel2, RemixFileMusic, RemixFileCopy2, RemixMarkdown, RemixFileHistory, RemixBill, RemixFolder5, RemixFolder4, RemixFileSettings, RemixFolderOpen, RemixFilePpt2, RemixFileWord, RemixFileMark, RemixFilePdf, RemixFolderChart2, RemixFilePpt, RemixBook, RemixFileExcel, RemixFolderKeyhole, RemixFolder, RemixFileShred, RemixContactsBookUpload, RemixNewspaper, RemixFileCode, RemixFolder2, RemixFolder3, RemixFilePaper, RemixFileCloud, RemixFolderSettings, RemixFolderWarning, RemixBookRead, RemixFileDownload, RemixStickyNote2, RemixPages, RemixFolderLock, RemixFileWarning, RemixFileChart2, RemixContactsBook, RemixDraft, RemixArticle, RemixFolderMusic, RemixFileForbid, RemixBooklet, RemixFileShield, RemixFolderShield, RemixFolderForbid, RemixFolderZip, RemixFolderShield2, RemixFolderAdd, RemixFolderReceived, RemixFileCopy, RemixFileZip, RemixFolderTransfer, RemixSurvey, RemixFileList, RemixFileAdd, RemixFileLock, RemixFileChart, RemixFile2, RemixFile3, RemixTodo, RemixNumbers, RemixFileTransfer, RemixContactsBook2, RemixFolderInfo, RemixClipboard, RemixFileDamage, RemixFileText, RemixBookOpen, RemixFile4, RemixFileUser, RemixFileGif, RemixStickyNote, RemixFileReduce, RemixFileWord2, RemixFolderUnknow, RemixKeynote, RemixFileList2, RemixFileList3, RemixFileUnknow, RemixFolderReduce, RemixFolderChart, RemixFileShield2, RemixUnderline, RemixDeleteRow, RemixSubscript, RemixSingleQuotesR, RemixTranslate, RemixOmega, RemixHeading, RemixStrikethrough, RemixWubiInput, RemixBringToFront, RemixAlignBottom, RemixMindMap, RemixAlignJustify, RemixPageSeparator, RemixAB, RemixFlowChart, RemixFontSize, RemixTranslate2, RemixLink, RemixSpace, RemixSortDesc, RemixAlignVertically, RemixDoubleQuotesR, RemixInsertColumnLeft, RemixLinkM, RemixInsertColumnRight, RemixNumber8, RemixRoundedCorner, RemixLinkUnlinkM, RemixOrganizationChart, RemixParagraph, RemixStrikethrough2, RemixMergeCellsVertical, RemixNumber9, RemixListOrdered, RemixBold, RemixFunctions, RemixTextDirectionR, RemixLineHeight, RemixInputCursorMove, RemixCodeView, RemixNumber7, RemixH3, RemixText, RemixAlignRight, RemixH2, RemixNumber6, RemixMergeCellsHorizontal, RemixNumber4, RemixSuperscript, RemixInsertRowBottom, RemixDoubleQuotesL, RemixFontColor, RemixH1, RemixNumber5, RemixSeparator, RemixNumber1, RemixH5, RemixSplitCellsVertical, RemixSplitCellsHorizontal, RemixPinyinInput, RemixSubscript2, RemixH4, RemixHashtag, RemixNumber0, RemixDeleteColumn, RemixNumber2, RemixH6, RemixBringForward, RemixInsertRowTop, RemixTextDirectionL, RemixTable2, RemixNumber3, RemixSendToBack, RemixSortAsc, RemixFormatClear, RemixQuestionMark, RemixIndentIncrease, RemixEnglishInput, RemixSingleQuotesL, RemixItalic, RemixAlignCenter, RemixTextWrap, RemixEmphasis, RemixListUnordered, RemixSuperscript2, RemixListCheck, RemixEmphasisCn, RemixNodeTree, RemixIndentDecrease, RemixAsterisk, RemixListCheck2, RemixTextSpacing, RemixAttachment2, RemixSendBackward, RemixAlignTop, RemixLinkUnlink, RemixFontSize2, RemixAlignLeft, RemixAt, RemixMailSend, RemixBarChartHorizontal, RemixWindow, RemixCloudOff, RemixProfile, RemixMailCheck, RemixAdvertisement, RemixMailForbid, RemixProjector2, RemixAward, RemixCreativeCommons, RemixCreativeCommonsSa, RemixBarChartBox, RemixPrinterCloud, RemixBubbleChart, RemixCalendarCheck, RemixInboxArchive, RemixReply, RemixCreativeCommonsNd, RemixBriefcase2, RemixBriefcase3, RemixArchiveDrawer, RemixPieChart, RemixLinks, RemixPrinter, RemixGlobal, RemixInbox, RemixReplyAll, RemixMailStar, RemixCreativeCommonsNc, RemixSlideshow, RemixCopyleft, RemixBriefcase5, RemixBriefcase4, RemixMedal, RemixBookmark, RemixStack, RemixWindow2, RemixMailVolume, RemixMailAdd, RemixMailUnread, RemixTrademark, RemixBarChart, RemixCustomerService, RemixSendPlane2, RemixSendPlane, RemixFlag, RemixCalendarTodo, RemixSlideshow4, RemixFlag2, RemixCalculator, RemixProjector, RemixCalendar2, RemixCalendarEvent, RemixPieChart2, RemixMailOpen, RemixAttachment, RemixCalendar, RemixPieChartBox, RemixMailSettings, RemixMail, RemixRecordMail, RemixDonutChart, RemixBriefcase, RemixArchive, RemixMailLock, RemixService, RemixRegistered, RemixBarChartGrouped, RemixHonour, RemixMailClose, RemixMailDownload, RemixBarChart2, RemixBookmark3, RemixBookmark2, RemixCreativeCommonsZero, RemixCopyright, RemixMedal2, RemixCloud, RemixLineChart, RemixCreativeCommonsBy, RemixInboxUnarchive, RemixSlideshow2, RemixSlideshow3, RemixCustomerService2, RemixSensor, RemixMacbook, RemixSave3, RemixSave2, RemixInstall, RemixSignalWifi2, RemixSignalWifi3, RemixRotateLock, RemixRouter, RemixRestart, RemixDatabase2, RemixScan, RemixQrScan, RemixHardDrive, RemixBatteryShare, RemixBattery2Charge, RemixBluetoothConnect, RemixQrCode, RemixShutDown, RemixSimCard2, RemixServer, RemixMac, RemixDeviceRecover, RemixBatteryCharge, RemixGradienter, RemixSdCard, RemixBattery, RemixSmartphone, RemixTablet, RemixTv2, RemixDevice, RemixRemoteControl2, RemixDualSim1, RemixFingerprint, RemixRss, RemixBarcodeBox, RemixCellphone, RemixQrScan2, RemixBluetooth, RemixGps, RemixKeyboardBox, RemixPhoneLock, RemixScan2, RemixCpu, RemixCast, RemixGamepad, RemixMouse, RemixBatteryLow, RemixBatterySaver, RemixRemoteControl, RemixUDisk, RemixTv, RemixAirplay, RemixUninstall, RemixSignalWifi1, RemixRadar, RemixSave, RemixSignalWifiError, RemixHardDrive2, RemixKeyboard, RemixWifiOff, RemixDashboard2, RemixDashboard3, RemixDualSim2, RemixDatabase, RemixBattery2, RemixSignalWifiOff, RemixPhoneFind, RemixWirelessCharging, RemixHotspot, RemixComputer, RemixSignalWifi, RemixSdCardMini, RemixUsb, RemixWifi, RemixBarcode, RemixFingerprint2, RemixBaseStation, RemixSimCard, RemixPhone, RemixGoogle, RemixWindows, RemixGatsby, RemixTelegram, RemixUbuntu, RemixVimeo, RemixFacebookCircle, RemixIe, RemixBehance, RemixGitlab, RemixWechat, RemixOpera, RemixRemixicon, RemixSteam, RemixStackOverflow, RemixWechatPay, RemixOpenSource, RemixSnapchat, RemixMiniProgram, RemixWechat2, RemixXbox, RemixPlaystation, RemixProductHunt, RemixPinterest, RemixInvision, RemixDouban, RemixQq, RemixReddit, RemixAlipay, RemixEdge, RemixDrive, RemixLinkedin, RemixTaobao, RemixVuejs, RemixNpmjs, RemixSkype, RemixTumblr, RemixUnsplash, RemixGooglePlay, RemixPaypal, RemixDingding, RemixFacebookBox, RemixSwitch, RemixReactjs, RemixInstagram, RemixTwitch, RemixDropbox, RemixMessenger, RemixBilibili, RemixAndroid, RemixYoutube, RemixFirefox, RemixKakaoTalk, RemixDisqus, RemixPixelfed, RemixCentos, RemixApple, RemixTrello, RemixZhihu, RemixAngularjs, RemixHonorOfKings, RemixSlack, RemixStackshare, RemixXing, RemixFacebook, RemixDiscord, RemixNeteaseCloudMusic, RemixChrome, RemixCodepen, RemixFlutter, RemixPatreon, RemixMicrosoft, RemixSoundcloud, RemixZcool, RemixLinkedinBox, RemixAppStore, RemixFinder, RemixWhatsapp, RemixNetflix, RemixSafari, RemixTwitter, RemixGithub, RemixMastodon, RemixMastercard, RemixMedium, RemixDribbble, RemixBaidu, RemixCoreos, RemixEvernote, RemixVisa, RemixAmazon, RemixSpectrum, RemixLine, RemixSpotify, RemixWeibo, RemixUserVoice, RemixTravesti, RemixOpenArm, RemixEmotionUnhappy, RemixAliens, RemixSpy, RemixUserUnfollow, RemixUser2, RemixSkull2, RemixUser3, RemixUserHeart, RemixAccountPinCircle, RemixUserStar, RemixRobot, RemixEmotion2, RemixAdmin, RemixBearSmile, RemixAccountCircle, RemixUserShared2, RemixUserLocation, RemixUserReceived, RemixWomen, RemixEmotionLaugh, RemixGhost, RemixBodyScan, RemixUserFollow, RemixUser5, RemixUser4, RemixTeam, RemixParent, RemixGhostSmile, RemixUser, RemixMen, RemixUserSettings, RemixCriminal, RemixGroup2, RemixEmotionSad, RemixStarSmile, RemixGroup, RemixAccountPinBox, RemixUserSmile, RemixAccountBox, RemixUserShared, RemixUser6, RemixUserSearch, RemixEmotion, RemixEmotionNormal, RemixUserReceived2, RemixUserAdd, RemixGenderless, RemixContacts, RemixEmotionHappy, RemixGhost2, RemixSkull, RemixMickey, RemixMenu, RemixShareBox, RemixCheck, RemixDeleteBack, RemixShieldStar, RemixArrowGoBack, RemixRadioButton, RemixArrowLeftRight, RemixShieldKeyhole, RemixArrowRightS, RemixEyeOff, RemixArrowDropRight, RemixArrowLeftUp, RemixFunction, RemixThumbUp, RemixCloseCircle, RemixSearch2, RemixEye, RemixArrowGoForward, RemixStar, RemixCheckboxBlankCircle, RemixStarHalfS, RemixCheckDouble, RemixSpam3, RemixSpam2, RemixDownload, RemixShareForward, RemixMenuAdd, RemixCheckboxCircle, RemixMenu5, RemixMenu4, RemixLockPassword, RemixMore, RemixDownload2, RemixShieldCross, RemixAlarm, RemixSettings6, RemixDeleteBin4, RemixDeleteBin5, RemixArrowDownCircle, RemixEyeClose, RemixLoginBox, RemixSearch, RemixArrowRight, RemixUploadCloud, RemixCheckboxMultipleBlank, RemixDownloadCloud2, RemixAddBox, RemixLogoutBox, RemixLock2, RemixUpload2, RemixMenu2, RemixMenu3, RemixArrowRightDown, RemixDivide, RemixFilterOff, RemixDeleteBin3, RemixDeleteBin2, RemixShareCircle, RemixStarS, RemixSearchEye, RemixArrowDownS, RemixDashboard, RemixTimer, RemixToggle, RemixRefresh, RemixUploadCloud2, RemixArrowDown, RemixSettings, RemixArrowDropLeft, RemixShare, RemixArrowUp, RemixLogoutCircleR, RemixShieldFlash, RemixErrorWarning, RemixAdd, RemixUpload, RemixCheckboxBlank, RemixLoginCircle, RemixZoomIn, RemixArrowLeftCircle, RemixDownloadCloud, RemixArrowUpS, RemixSettings5, RemixSettings4, RemixAddCircle, RemixDeleteBin7, RemixDeleteBin6, RemixShareForward2, RemixFilter, RemixArrowUpDown, RemixAlarmWarning, RemixShieldUser, RemixArrowRightUp, RemixLoader4, RemixLoader5, RemixInformation, RemixSideBar, RemixDeleteBack2, RemixLogoutCircle, RemixFindReplace, RemixCheckboxMultiple, RemixArrowUpCircle, RemixMenuFold, RemixSpam, RemixApps, RemixLoader, RemixMore2, RemixMenuUnfold, RemixLogoutBoxR, RemixZoomOut, RemixTime, RemixLockUnlock, RemixArrowLeftS, RemixClose, RemixQuestion, RemixNotificationBadge, RemixArrowLeftDown, RemixDeleteBin, RemixShieldCheck, RemixEye2, RemixExternalLink, RemixTimer2, RemixThumbDown, RemixArrowDropUp, RemixHistory, RemixApps2, RemixSettings2, RemixSettings3, RemixTimerFlash, RemixListSettings, RemixArrowLeft, RemixSubtract, RemixCheckbox, RemixArrowRightCircle, RemixArrowDropDown, RemixCheckboxIndeterminate, RemixForbid, RemixLoader3, RemixForbid2, RemixLoader2, RemixIndeterminateCircle, RemixShield, RemixLock, RemixFilter2, RemixFilter3, RemixShareForwardBox, RemixAlert, RemixStarHalf, RemixChat1, RemixChatQuote, RemixChatSmile3, RemixChatSmile2, RemixChatFollowUp, RemixChatUpload, RemixChatOff, RemixChatVoice, RemixChatPoll, RemixChatHistory, RemixChatDelete, RemixChatHeart, RemixQuestionnaire, RemixFeedback, RemixMessage3, RemixMessage2, RemixChatForward, RemixVideoChat, RemixChatCheck, RemixMessage, RemixChatSettings, RemixChat2, RemixChat3, RemixQuestionAnswer, RemixChat4, RemixChatNew, RemixDiscuss, RemixChatPrivate, RemixChatDownload, RemixChatSmile, RemixLightbulbFlash, RemixDoorLockBox, RemixWheelchair, RemixKnifeBlood, RemixCake2, RemixCake3, RemixSeedling, RemixUmbrella, RemixCactus, RemixKnife, RemixOutlet, RemixKey2, RemixDoor, RemixVoiceRecognition, RemixCake, RemixLeaf, RemixPlant, RemixPlug2, RemixLightbulb, RemixScales3, RemixScales2, RemixSword, RemixFridge, RemixRecycle, RemixBoxing, RemixPingPong, RemixBell, RemixTShirt, RemixScales, RemixBilliards, RemixShirt, RemixTShirtAir, RemixCharacterRecognition, RemixDoorOpen, RemixReserved, RemixGame, RemixKey, RemixPlug, RemixOutlet2, RemixDoorClosed, RemixBasketball, RemixDoorLock, RemixFootball, RemixHandbag, RemixTShirt2, RemixCursor, RemixCode, RemixBraces, RemixGitBranch, RemixTerminalBox, RemixGitCommit, RemixGitRepositoryCommits, RemixCss3, RemixCodeBox, RemixTerminalWindow, RemixBug, RemixHtml5, RemixGitPullRequest, RemixCodeSSlash, RemixTerminal, RemixParentheses, RemixBug2, RemixCommand, RemixGitMerge, RemixGitRepository, RemixGitRepositoryPrivate, RemixBrackets, RemixCodeS, RemixImage2, RemixPlayCircle, RemixFullscreenExit, RemixCameraSwitch, RemixPauseMini, RemixRhythm, RemixTape, RemixRadio2, RemixDvd, RemixPlayListAdd, RemixPauseCircle, RemixPlayMini, RemixWebcam, RemixPictureInPicture2, RemixFullscreen, RemixSkipForward, RemixSkipBack, RemixHd, RemixDv, RemixMusic2, RemixSpeaker3, RemixSpeaker2, RemixStopMini, RemixVolumeOffVibrate, RemixClosedCaptioning, RemixHq, RemixShuffle, RemixNotificationOff, RemixSurroundSound, RemixRepeat2, RemixStopCircle, RemixEqualizer, RemixRecordCircle, RemixGalleryUpload, RemixVoiceprint, RemixPictureInPicture, RemixStop, RemixSpeaker, RemixImageEdit, RemixNotification4, RemixSkipBackMini, Remix4k, RemixAspectRatio, RemixMusic, RemixPhoneCamera, RemixVideoDownload, RemixRepeatOne, RemixPause, RemixVideo, RemixSoundModule, RemixBroadcast, RemixVideoAdd, RemixVolumeDown, RemixRewindMini, RemixSpeed, RemixOrderPlay, RemixSpeedMini, RemixClapperboard, RemixHeadphone, RemixPlay, RemixFilm, RemixMic, RemixNotification, RemixAlbum, RemixSkipForwardMini, RemixRadio, RemixVideoUpload, RemixVolumeUp, RemixVidicon2, RemixImage, RemixVolumeMute, RemixDisc, RemixLandscape, RemixMic2, RemixMicOff, RemixPictureInPictureExit, RemixRepeat, RemixVolumeVibrate, RemixCamera, RemixEject, RemixImageAdd, RemixGallery, RemixPolaroid2, RemixMovie, RemixNotification2, RemixNotification3, RemixMovie2, RemixMv, RemixRewind, RemixPlayList2, RemixLive, RemixPolaroid, RemixCameraOff, RemixPlayList, RemixCamera3, RemixCamera2, RemixCameraLens, RemixVidicon, RemixHeartAdd, RemixMentalHealth, RemixFlask, RemixNurse, RemixEmpathize, RemixCapsule, RemixPulse, RemixSyringe, RemixHearts, RemixFirstAidKit, RemixDislike, RemixThermometer, RemixZzz, RemixMedicineBottle, RemixLungs, RemixStethoscope, RemixRestTime, RemixSurgicalMask, RemixHeart2, RemixHeart3, RemixVirus, RemixHeart, RemixInfraredThermometer, RemixPsychotherapy, RemixDossier, RemixHeartPulse, RemixMicroscope, RemixHandSanitizer, RemixHealthBook, RemixTestTube, RemixTempHot, RemixCloudy2, RemixCloudy, RemixHaze, RemixWindy, RemixMoonClear, RemixFire, RemixThunderstorms, RemixMoonCloudy, RemixSunFoggy, RemixShowers, RemixTyphoon, RemixCelsius, RemixHaze2, RemixMist, RemixFlashlight, RemixRainy, RemixRainbow, RemixSun, RemixTornado, RemixSunCloudy, RemixFahrenheit, RemixHail, RemixFlood, RemixTempCold, RemixHeavyShowers, RemixMeteor, RemixCloudWindy, RemixBlaze, RemixEarthquake, RemixSnowy, RemixDrizzle, RemixFoggy, RemixMoon, RemixMoonFoggy, RemixMapPin2, RemixMapPin3, RemixPushpin2, RemixMap, RemixGasStation, RemixShip, RemixRestaurant2, RemixGuide, RemixWalk, RemixGoblet, RemixTrainWifi, RemixRiding, RemixSteering, RemixTakeaway, RemixPassport, RemixChinaRailway, RemixPinDistance, RemixOil, RemixCompass4, RemixCarWashing, RemixPoliceCar, RemixCar, RemixFlightLand, RemixTruck, RemixLifebuoy, RemixFlightTakeoff, RemixMapPinRange, RemixHotelBed, RemixCompass3, RemixCompass2, RemixDirection, RemixRestaurant, RemixChargingPile2, RemixMapPin5, RemixMapPin4, RemixCompass, RemixNavigation, RemixSubwayWifi, RemixMap2, RemixTaxiWifi, RemixShip2, RemixSuitcase, RemixSteering2, RemixCaravan, RemixEarth, RemixPushpin, RemixPlane, RemixMapPinAdd, RemixTrain, RemixMapPinUser, RemixTaxi, RemixParking, RemixLuggageDeposit, RemixGlobe, RemixBus, RemixParkingBox, RemixCompassDiscover, RemixCup, RemixSailboat, RemixMapPin, RemixRocket, RemixEBike, RemixTreasureMap, RemixChargingPile, RemixBarricade, RemixMotorbike, RemixRun, RemixAnchor, RemixBusWifi, RemixRoadster, RemixBus2, RemixMapPinTime, RemixSignalTower, RemixSuitcase3, RemixSuitcase2, RemixRoute, RemixRocket2, RemixEBike2, RemixSpaceShip, RemixTrafficLight, RemixFootprint, RemixBike, RemixSubway, RemixLuggageCart, RemixRoadMap, RemixMoneyEuroCircle, RemixCoins, RemixCoin, RemixPriceTag, RemixMoneyCnyCircle, RemixShoppingCart2, RemixCoupon5, RemixCoupon4, RemixSafe, RemixGift, RemixMoneyDollarBox, RemixBankCard2, RemixShoppingBag, RemixVipCrown2, RemixExchange, RemixTicket, RemixMoneyPoundCircle, RemixExchangeFunds, RemixMoneyCnyBox, RemixRefund, RemixSwap, RemixCurrency, RemixExchangeBox, RemixSwapBox, RemixSafe2, RemixCoupon, RemixRefund2, RemixGift2, RemixCoupon2, RemixCoupon3, RemixMoneyPoundBox, RemixBankCard, RemixCopperCoin, RemixShoppingBasket2, RemixHandCoin, RemixMoneyDollarCircle, RemixExchangeDollar, RemixStock, RemixShoppingBag3, RemixShoppingBag2, RemixTicket2, RemixTrophy, RemixWallet3, RemixWallet2, RemixVipDiamond, RemixExchangeCny, RemixMoneyEuroBox, RemixWallet, RemixAuction, RemixWaterFlash, RemixCopperDiamond, RemixPercent, RemixVip, RemixFunds, RemixShoppingCart, RemixRedPacket, RemixPriceTag2, RemixPriceTag3, RemixHandHeart, RemixVipCrown, RemixSecurePayment, RemixShoppingBasket, Remix24Hours, RemixBitCoin, RemixIncreaseDecrease, RemixFundsBox, RemixLayoutRight2, RemixDragDrop, RemixLayoutBottom, RemixDrop, RemixAnticlockwise2, RemixPaintBrush, RemixMarkPen, RemixEditCircle, RemixInkBottle, RemixClockwise, RemixPantone, RemixClockwise2, RemixLayoutTop, RemixTBox, RemixLayout5, RemixLayout4, RemixMagic, RemixPenNib, RemixAnticlockwise, RemixCompasses2, RemixContrastDrop, RemixCompasses, RemixCrop2, RemixTableAlt, RemixLayoutBottom2, RemixLayout2, RemixLayout3, RemixLayoutTop2, RemixFocus, RemixContrast2, RemixPencilRuler, RemixLayoutLeft, RemixLayoutGrid, RemixEdit, RemixScissors, RemixSlice, RemixGrid, RemixEditBox, RemixContrast, RemixLayout6, RemixPalette, RemixEraser, RemixDragMove, RemixRuler2, RemixBallPen, RemixLayoutColumn, RemixEdit2, RemixFocus2, RemixFocus3, RemixShape2, RemixLayoutRow, RemixRuler, RemixBrush3, RemixBrush2, RemixScreenshot2, RemixHammer, RemixBlurOff, RemixLayoutRight, RemixPencilRuler2, RemixScissors2, RemixBrush, RemixLayoutLeft2, RemixLayout, RemixScreenshot, RemixTable, RemixMarkup, RemixBrush4, RemixPaint, RemixLayoutMasonry, RemixScissorsCut, RemixPencil, RemixTools, RemixArtboard, RemixQuillPen, RemixContrastDrop2, RemixCollage, RemixSip, RemixInputMethod, RemixArtboard2, RemixShape, RemixDragMove2, RemixCrop, RemixHospital, RemixHomeHeart, RemixCommunity, RemixHome4, RemixHome5, RemixHome8, RemixHome3, RemixHome2, RemixHome, RemixGovernment, RemixHomeSmile2, RemixHome7, RemixHome6, RemixHomeSmile, RemixBuilding4, RemixBuilding, RemixHomeWifi, RemixStore3, RemixStore2, RemixHotel, RemixHomeGear, RemixAncientPavilion, RemixAncientGate, RemixBuilding3, RemixBuilding2, RemixBank, RemixStore, };
